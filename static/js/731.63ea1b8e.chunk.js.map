{"version":3,"file":"static/js/731.63ea1b8e.chunk.js","mappings":"qLACA,EAAgC,+BAAhC,EAAwE,wB,mBCoBxE,EAhBiB,kBACf,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,OAAQ,IACRC,MAAO,IACPC,OAAQ,EACRC,MAAM,UACNC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTT,UAAWC,KAXA,C,kECHXS,EAAU,mCAAG,WAAMC,GAAN,gGAEQC,EAAAA,EAAAA,IAAUD,GAFlB,cAETE,EAFS,yBAGRA,GAHQ,wFAAH,sDAUhB,K,uJCuCA,EA/CwB,SAAAC,GACtB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAyCA,OApCAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,6FAClBZ,EAAM,GAAGa,OACbC,EAAAA,GACA,SACAX,EACA,oBACAW,EAAAA,GACA,mBAPsB,mBAWKf,EAAAA,EAAAA,GAAWC,GAXhB,UAWhBK,EAXgB,OAajBF,EAbiB,uBAcpBG,EAAgB,MAdI,6BAkBtBA,EAAgBD,EAAaU,KAAKC,SAE7BX,EApBiB,uBAqBd,IAAIY,MAAM,sDArBI,0DAwBtBP,EAAS,KAAMQ,SAxBO,yBA0BtBV,GAAa,GA1BS,6EAAH,qDA8BvBE,EAAS,MACTF,GAAa,GACbI,GACD,GAAE,CAACT,IAEG,CAAEI,UAAAA,EAAWE,MAAAA,EAAOJ,aAAAA,EAC5B,E,UChDD,EAA6B,2BAA7B,EAA4E,kC,mBC6C5E,EAxCgB,WACd,IAAQc,GAAYC,EAAAA,EAAAA,MAAZD,QACR,EAA2CE,EAAgBF,GAAnDZ,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,MAAOJ,EAA1B,EAA0BA,aAM1B,OAJII,GACFa,EAAAA,GAAAA,MAAYb,GAGc,IAAxBJ,EAAakB,QACR,mEAGLlB,GAEA,2BACGE,IAAa,SAACiB,EAAA,EAAD,KACd,eAAInC,UAAWC,EAAf,SACGe,EAAaoB,KAAI,SAAAC,GAAG,OACnB,yBACE,gCACE,wBAAKA,EAAIC,UACT,uBAAID,EAAIE,WACR,mBAAQvC,UAAWC,EAAnB,UACE,wCAEE,kBAAMuC,SAAUH,EAAII,WAApB,UACG,IACAJ,EAAII,WAAWC,MAAM,KAAK,eAT5BL,EAAIM,GADM,cAL7B,CA0BD,C","sources":["webpack://react-homework-template/./src/components/spinner/Spinner.module.css?a11c","components/spinner/Spinner.js","functions/api.js","hooks/fetchReviews.js","webpack://react-homework-template/./src/pages/MovieDetails/reviews/Review.module.css?3ecd","pages/MovieDetails/reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loaderWrapper\":\"Spinner_loaderWrapper__OsG+c\",\"loader\":\"Spinner_loader__yCPuB\"};","\nimport { BallTriangle } from 'react-loader-spinner';\nimport css from './Spinner.module.css';\nimport React from 'react';\n\n const Spinner = () => (\n  <div className={css.loaderWrapper}>\n    <BallTriangle\n      height={100}\n      width={100}\n      radius={5}\n      color=\"#3f51b5\"\n      ariaLabel=\"ball-triangle-loading\"\n      wrapperClass={{}}\n      wrapperStyle=\"\"\n      visible={true}\n      className={css.loader}\n    />\n  </div>\n);\n\nexport default Spinner;","import axios from 'axios';\n\nconst fetchMovie = async url => {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n\n  }\n};\n\n\nexport default fetchMovie;\n","import fetchMovie from 'functions/api';\nimport { useEffect, useState } from 'react';\nimport base from '../data/api.json';\n\nconst useMovieReviews = movie_id => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  //https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n  //`${baseUrl}movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      const url = ''.concat(\n        base.baseUrl,\n        'movie/',\n        movie_id,\n        '/reviews?api_key=',\n        base.KEY,\n        '&language=en-US'\n      );\n\n      try {\n        const movieReviews = await fetchMovie(url);\n\n        if (!movie_id) {\n          setMovieReviews(null);\n          return;\n        }\n\n        setMovieReviews(movieReviews.data.results);\n\n        if (!movieReviews) {\n          throw new Error('Getting detailed data is impossible in that moment');\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    setError(null);\n    setIsLoading(true);\n    fetchMovieReviews();\n  }, [movie_id]);\n\n  return { isLoading, error, movieReviews };\n};\n\nexport default useMovieReviews;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewList\":\"Review_reviewList__svn-r\",\"reviewListArticle\":\"Review_reviewListArticle__V9b+A\"};","import { useParams } from 'react-router-dom';\nimport useMovieReviews from '../../../hooks/fetchReviews';\nimport Spinner from 'components/spinner/Spinner';\nimport css from './Review.module.css';\nimport { toast } from 'react-toastify';\n\nconst Reviews = () => {\n  const { movieID } = useParams();\n  const { isLoading, error, movieReviews } = useMovieReviews(movieID);\n\n  if (error) {\n    toast.error(error);\n  }\n\n  if (movieReviews.length === 0) {\n    return <h2>There is no any comment for this movie</h2>;\n  }\n\n  if (movieReviews) {\n    return (\n      <div>\n        {isLoading && <Spinner />}\n        <ul className={css.reviewList}>\n          {movieReviews.map(rev => (\n            <li key={rev.id}>\n              <article>\n                <h3>{rev.author}</h3>\n                <p>{rev.content}</p>\n                <footer className={css.reviewListArticle}>\n                  <p>\n                    Created at:\n                    <time dateTime={rev.created_at}>\n                      {' '}\n                      {rev.created_at.split('T')[0]}\n                    </time>\n                  </p>\n                </footer>\n              </article>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n};\n\nexport default Reviews;\n"],"names":["className","css","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","fetchMovie","url","axios","response","movie_id","useState","movieReviews","setMovieReviews","isLoading","setIsLoading","error","setError","useEffect","fetchMovieReviews","concat","base","data","results","Error","message","movieID","useParams","useMovieReviews","toast","length","Spinner","map","rev","author","content","dateTime","created_at","split","id"],"sourceRoot":""}