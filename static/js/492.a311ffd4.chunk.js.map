{"version":3,"file":"static/js/492.a311ffd4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/spinner/Spinner.module.css?a11c","components/spinner/Spinner.js","functions/api.js","hooks/fetchQueryMovies.js","webpack://react-homework-template/./src/components/searchingForm/SearchForm.module.css?343c","components/searchingForm/SearchForm.jsx","components/searchingMovieList/SearchMovieList.js","webpack://react-homework-template/./src/pages/moviesPage/Movies.module.css?e904","pages/moviesPage/Movies.jsx","webpack://react-homework-template/./src/pages/homePage/HomePage.module.css?0264"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loaderWrapper\":\"Spinner_loaderWrapper__OsG+c\",\"loader\":\"Spinner_loader__yCPuB\"};","\nimport { BallTriangle } from 'react-loader-spinner';\nimport css from './Spinner.module.css';\nimport React from 'react';\n\n const Spinner = () => (\n  <div className={css.loaderWrapper}>\n    <BallTriangle\n      height={100}\n      width={100}\n      radius={5}\n      color=\"#3f51b5\"\n      ariaLabel=\"ball-triangle-loading\"\n      wrapperClass={{}}\n      wrapperStyle=\"\"\n      visible={true}\n      className={css.loader}\n    />\n  </div>\n);\n\nexport default Spinner;","import axios from 'axios';\n\nconst fetchMovie = async url => {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n\n  }\n};\n\n\nexport default fetchMovie;\n","import { useState, useEffect } from 'react';\nimport fetchMovie from 'functions/api';\nimport base from '../data/api.json';\n\nconst useSearchMovies = query => {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchSearchedMovies = async () => {\n      const queryURL = ''.concat(\n        base.baseUrl,\n        'search/movie?api_key=',\n        base.KEY,\n        '&language=en-US&page=1&include_adult=false&query=',\n        query\n      );\n\n      //run update if query is not empty\n      if (!query) {\n        setSearchedMovies([]);\n        return;\n      }\n\n      try {\n        const response = await fetchMovie(queryURL);\n        if (!response) {\n          throw new Error('Sorry, something went wrong');\n        }\n\n        setSearchedMovies(response.data.results);\n\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    setIsLoading(true);\n    setError(null);\n\n    const debounceForSearchingMovies = setTimeout(() => {\n      fetchSearchedMovies();\n    }, 500);\n\n    return () => {\n      clearTimeout(debounceForSearchingMovies);\n    };\n  }, [query]);\n\n  return { isLoading, error, searchedMovies };\n};\n\nexport default useSearchMovies;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchForm_wrapper__s3vtr\",\"form\":\"SearchForm_form__fy7Ni\",\"formInput\":\"SearchForm_formInput__uryet\",\"button\":\"SearchForm_button__+TOMB\"};","import { useState } from 'react';\nimport css from './SearchForm.module.css'\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n\n    //clear input value from state\n    setQuery('');\n  };\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <form onSubmit={onFormSubmit} className={css.form}>\n        <input\n          placeholder=\"Enter any phrase for searching\"\n          value={query}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={handleChange}\n          className={css.formInput}\n        ></input>\n        <button type=\"submit\" className={css.button}>Search</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  setQuery: PropTypes.func,\n  query: PropTypes.string,\n\n};","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport css from '../../pages/homePage/HomePage.module.css';\nimport PropTypes from 'prop-types';\n\nconst SearchMovieList = ({ movies }) => {\n  const location = useLocation();\n\n  const movieItems = movies.map(movie => {\n    return (\n      <li key={movie.id} className={css.homeListItem}>\n        <Link\n          to={`/movies/${movie.id}`}\n          state={{ from: location }}\n          className={css.homeLink}\n        >\n          {movie.title}\n        </Link>\n        <span className={css.homeListItemMarker}>â—„ </span>\n      </li>\n    );\n  });\n\n  return (\n    <div className={`${css.container} ${css.home}`}>\n      <h2 className={css.homeHeader}>\n        {movies.length > 1\n          ? 'Movie results:'\n          : 'Please enter any phrase to find movies'}\n      </h2>\n      <ul className={css.homeList}>{movieItems}</ul>\n    </div>\n  );\n};\n\nexport default SearchMovieList;\n\nSearchMovieList.propTypes = {\n  movie: PropTypes.array,\n  id: PropTypes.string,\n  movieItems: PropTypes.func,\n  title: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"Movies_movies__zMd4b\"};","import useSearchMovies from 'hooks/fetchQueryMovies';\nimport { useState } from 'react';\nimport SearchForm from '../../components/searchingForm/SearchForm';\nimport SearchMovieList from 'components/searchingMovieList/SearchMovieList';\nimport { useSearchParams } from 'react-router-dom';\nimport Spinner from 'components/spinner/Spinner';\nimport css from './Movies.module.css';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const { searchedMovies, error, isLoading } = useSearchMovies(searchQuery);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSubmit = query => {\n    updateQueryString(query);\n    setSearchQuery(query);\n  };\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  if (error) {\n    toast.error(error);\n  }\n\n  return (\n    <div className={css.movies}>\n      {isLoading && searchQuery !== '' && <Spinner />}\n      <SearchForm onSubmit={handleSubmit} params={searchParams} />\n      {searchedMovies && <SearchMovieList movies={searchedMovies} />}\n    </div>\n  );\n};\n\nexport default Movies;\n\nMovies.propTypes = {\n  searchQuery: PropTypes.string,\n  searchParams: PropTypes.string,\n  searchedMovies: PropTypes.array,\n  isLoading: PropTypes.bool,\n  error: PropTypes.string,\n  query: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"HomePage_container__CZjBo\",\"home\":\"HomePage_home__ZXHmc\",\"homeHeader\":\"HomePage_homeHeader__lmQJA\",\"homeList\":\"HomePage_homeList__toFsl\",\"homeListItem\":\"HomePage_homeListItem__Nm6B-\",\"homeListItemMarker\":\"HomePage_homeListItemMarker__aSz36\",\"homeLink\":\"HomePage_homeLink__g2TOm\"};"],"names":["className","css","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","fetchMovie","url","axios","response","query","useState","searchedMovies","setSearchedMovies","isLoading","setIsLoading","error","setError","useEffect","fetchSearchedMovies","queryURL","concat","base","Error","data","results","message","debounceForSearchingMovies","setTimeout","clearTimeout","onSubmit","setQuery","e","preventDefault","placeholder","value","type","autoComplete","autoFocus","onChange","target","movies","location","useLocation","movieItems","map","movie","to","id","state","from","title","length","searchQuery","setSearchQuery","useSearchMovies","useSearchParams","searchParams","setSearchParams","updateQueryString","toast","Spinner","params"],"sourceRoot":""}